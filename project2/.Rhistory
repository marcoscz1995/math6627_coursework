setwd("~/Documents/YorkU_Courses/MATH6627_Stats_Consulting/math6627_coursework/project2")
df<-read.csv("data/cleaned_data.csv")
df<-read.csv("data/ted_main.csv")
df<-read.csv("data/cleaned_data.csv")
df<-read.csv("data/cleaned_data.csv")
df<-read.csv("data/cleaned_data.csv")
View(df)
df<-read.csv("data/cleaned_data.csv")
attach(df)
View(df)
View(df)
df<-read.csv("data/cleaned_data.csv")
attach(df)
#response: avg views per day
#use kmeans with bow
pois_views_bow <-
glm(
avg_views_per_day ~ duration + event + num_speaker + film_age + BOW_Clus_with_Label,
family = poisson(link = log)
)
summary(pois_views_bow)
#response: avg views per day
#use kmeans with bow
pois_views_bow <-
glm(
avg_views_per_day ~ duration + num_speaker + film_age + BOW_Clus_with_Label,
family = poisson(link = log)
)
summary(pois_views_bow)
df <- read.csv("data/cleaned_data.csv")
attach(df)
#response: avg views per day
#use kmeans with bow
pois_views_bow <-
glm(
avg_views_per_day ~ duration + num_speaker + film_age + BOW_Clus_with_Label,
family = poisson(link = log)
)
summary(pois_views_bow)
pois_views_tfidf <-
glm(
avg_views_per_day ~ duration + num_speaker + film_age + BOW_Clus_with_Label,
family = poisson(link = log)
)
summary(pois_views_tfidf)
pois_views_tfidf <-
glm(
avg_views_per_day ~ duration + num_speaker + film_age + tfidf_Clus_with_Label,
family = poisson(link = log)
)
summary(pois_views_tfidf)
df <- read.csv("data/cleaned_data.csv")
View(df)
#response: composite popularity score
pois_popularity <-
glm(
avg_views_per_day ~ duration + num_speaker + film_age,
family = poisson(link = log)
)
summary(pois_popularity)
#response: composite popularity score
pois_popularity <-
lm(
avg_views_per_day ~ duration + num_speaker + film_age
)
summary(pois_popularity)
#Linear model
#response: composite popularity score (includes languages, standardized comments,
# standardized viewsaggregate ratings, )
normal_popularity <-
lm(
avg_views_per_day ~ duration + num_speaker + film_age +BOW_Clus_with_Label
)
summary(pois_popularity)
summary(normal_popularity)
df <- read.csv("data/cleaned_data.csv")
df <- read.csv("data/cleaned_data.csv")
attach(df)
#Linear model
#response: composite popularity score (includes languages, standardized comments,
# standardized viewsaggregate ratings, )
normal_popularity <-
lm(
popularity ~ duration + num_speaker + film_age +BOW_Clus_with_Label
)
summary(normal_popularity)
#Linear model
#response: composite popularity score (includes languages, standardized comments,
# standardized views,aggregate ratings, number of related talks)
normal_popularity <-
lm(
popularity ~ duration + num_speaker + film_age +BOW_Clus_with_Label +main_speaker
)
summary(normal_popularity)
library(lme4)
#only random intercept
pois_views_1 <-
glmer(
avg_views_per_day ~ duration + num_speaker + film_age + (1 |
BOW_Clus_with_Label),
data = tester,
family = poisson(link = log)
)
#variation by time
#take a random sample of 1000
tester <- df[sample(nrow(df), 1000), ]
#no randomness
pois_views_0 <-
glm(
avg_views_per_day ~ duration + num_speaker + film_age,
data = tester,
family = poisson(link = log)
)
#only random intercept
pois_views_1 <-
glmer(
avg_views_per_day ~ duration + num_speaker + film_age + (1 |
BOW_Clus_with_Label),
data = tester,
family = poisson(link = log)
)
summary(pois_views_1)
df <- read.csv("data/cleaned_data.csv")
attach(df)
#response: avg views per day
#use kmeans with bow
pois_views_bow <-
glm(
avg_views_per_day ~ duration + num_speaker + film_age + BOW_Clus_with_Label,
family = poisson(link = log)
)
summary(pois_views_bow)
#no randomness
pois_views_0 <-
glm(
avg_views_per_day ~ duration + num_speaker + film_age,
data = tester,
family = poisson(link = log)
)
#variation by time
#take a random sample of 1000
tester <- df[sample(nrow(df), 1000), ]
#no randomness
pois_views_0 <-
glm(
avg_views_per_day ~ duration + num_speaker + film_age,
data = tester,
family = poisson(link = log)
)
#only random intercept
pois_views_1 <-
glmer(
avg_views_per_day ~ duration + num_speaker + film_age + (1 |
BOW_Clus_with_Label),
data = tester,
family = poisson(link = log)
)
summary(pois_views_1)
#random intercept and slope
pois_views_2 <-
glmer(
avg_views_per_day ~ duration + num_speaker + film_age + (1 + duration + num_speaker + film_age |
BOW_Clus_with_Label),
data = tester,
family = poisson(link = log)
)
summary(pois_views_2)
#no randomness
pois_views_0 <-
glm(
avg_views_per_day ~ duration + num_speaker + film_age,
data = df,
family = poisson(link = log)
)
#random intercept and slope
pois_views_2 <-
glmer(
avg_views_per_day ~ duration + num_speaker + film_age + (1 + duration + num_speaker + film_age |
BOW_Clus_with_Label),
data = df,
family = poisson(link = log)
)
summary(pois_views_2)
summary(pois_views_1)
#random intercept and slope
pois_views_2 <-
glmer(
avg_views_per_day ~ duration + num_speaker + film_age + (1 + duration + num_speaker + film_age |
BOW_Clus_with_Label),
data = df,
family = poisson(link = log)
)
summary(pois_views_2)
saveRDS(pois_views_0, "model_weights/pois_views_0.RDS")
saveRDS(pois_views_1, "model_weights/pois_views_1.RDS")
saveRDS(pois_views_2, "model_weights/pois_views_2.RDS")
saveRDS(pois_views_0, "model_weights/pois_views_0.RDS")
saveRDS(pois_views_1, "model_weights/pois_views_1.RDS")
saveRDS(pois_views_2, "model_weights/pois_views_2.RDS")
######Normal models on popularity score
#no randomness
normal_popularity_themes_0 <-
lm(
popularity ~ duration + num_speaker + film_age,
data = df
)
summary(normal_popularity_themes_0)
#only random intercept
normal_popularity_themes_1 <-
lmer(
popularity ~ duration + num_speaker + film_age + (1 |
BOW_Clus_with_Label),
data = df
)
summary(normal_popularity_themes_1)
df <- read.csv("data/cleaned_data.csv")
attach(df)
