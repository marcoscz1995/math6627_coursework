setwd("~/Documents/YorkU_Courses/MATH6627_Stats_Consulting/math6627_coursework/project2")
library(glmmTMB)
df <- read.csv("data/cleaned_data.csv")
attach(df)
pois_test <-
glmmTMB(
avg_views_per_day ~ duration+ title_length+title_sentiment_tfidf + num_speaker + film_age + (1 + duration + num_speaker + film_age+ title_length+title_sentiment_tfidf |
tags_label_tfidf),
data = df,
family = poisson(link = log)
)
summary(pois_test)
source("latex_tables_makers/longtablestargazer.R")
require(stargazer)
longtable.stargazer(
pois_test,
title = "Poisson Regression with BOW",
align = TRUE,
type = "latex",
dep.var.labels   = "Heart Disease",
omit.stat = c("LL", "ser", "f"),
single.row = TRUE,
filename = "report/tables/test.tex"
)
stargazer(
pois_test,
title = "Poisson Regression with BOW",
align = TRUE,
type = "latex",
dep.var.labels   = "Heart Disease",
omit.stat = c("LL", "ser", "f"),
single.row = TRUE,
filename = "report/tables/test.tex"
)
#####variation by themes
#Poisson models with kmeans tfidf on avergae views per day
#no randomness
pois_views_themes_0 <-
glm(
avg_views_per_day ~ duration + num_speaker + film_age+ title_length+title_sentiment_tfidf,
data = df,
family = poisson(link = log)
)
summary(pois_views_themes_0)
#only random intercept
pois_views_themes_1 <-
glmer(
avg_views_per_day ~ duration + num_speaker + title_length+title_sentiment_tfidf+ film_age + (1 |
tags_label_tfidf),
data = df,
family = poisson(link = log)
)
summary(pois_views_themes_1)
library(lme4)
#####variation by themes
#Poisson models with kmeans tfidf on avergae views per day
#no randomness
pois_views_themes_0 <-
glm(
avg_views_per_day ~ duration + num_speaker + film_age+ title_length+title_sentiment_tfidf,
data = df,
family = poisson(link = log)
)
summary(pois_views_themes_0)
#only random intercept
pois_views_themes_1 <-
glmer(
avg_views_per_day ~ duration + num_speaker + title_length+title_sentiment_tfidf+ film_age + (1 |
tags_label_tfidf),
data = df,
family = poisson(link = log)
)
summary(pois_views_themes_1)
#random intercept and slope
pois_views_themes_2 <-
glmer(
avg_views_per_day ~ duration + title_length+title_sentiment_tfidf+ num_speaker + film_age + (1 + duration + num_speaker + film_age + title_length+title_sentiment_tfidf |
tags_label_tfidf),
data = df,
family = poisson(link = log)
)
summary(pois_views_themes_2)
#save the weights
saveRDS(pois_views_themes_0, "model_weights/pois_views_themes_0.RDS")
saveRDS(pois_views_themes_1, "model_weights/pois_views_themes_1.RDS")
saveRDS(pois_views_themes_2, "model_weights/pois_views_themes_2.RDS")
######Normal models on popularity score
#no randomness
normal_popularity_themes_0 <-
lm(
popularity ~ duration + num_speaker + film_age+ title_length+title_sentiment_tfidf,
data = df
)
summary(normal_popularity_themes_0)
#only random intercept
normal_popularity_themes_1 <-
lmer(
popularity ~ duration + num_speaker + title_length+title_sentiment_tfidf+ film_age + (1 |
tags_label_tfidf),
data = df
)
summary(normal_popularity_themes_1)
#random intercept and slope
normal_popularity_themes_2 <-
lmer(
popularity ~ duration + num_speaker+ title_length+title_sentiment_tfidf + film_age + (1 + duration + num_speaker + film_age+ title_length+title_sentiment_tfidf |
tags_label_tfidf),
data = df
)
summary(normal_popularity_themes_2)
#save the weights
saveRDS(normal_popularity_themes_0, "model_weights/normal_popularity_themes_0.RDS")
saveRDS(normal_popularity_themes_1, "model_weights/normal_popularity_themes_1.RDS")
saveRDS(normal_popularity_themes_2, "model_weights/normal_popularity_themes_2.RDS")
#Poisson models
pois_views_times_0 <-
glm(
avg_views_per_day ~ duration + num_speaker+ title_length+title_sentiment_tfidf + film_age,
data = df,
family = poisson(link = log)
)
summary(pois_views_times_0)
#only random intercept
pois_views_times_1 <-
glmer(
avg_views_per_day ~ duration + title_length+title_sentiment_tfidf+ num_speaker + film_age + (1 |
tags_label_tfidf),
data = df,
family = poisson(link = log)
)
summary(pois_views_times_1)
#random intercept and slope
pois_views_times_2 <-
glmer(
avg_views_per_day ~ duration+ title_length+title_sentiment_tfidf + num_speaker + film_age + (1 + duration + num_speaker + film_age+ title_length+title_sentiment_tfidf |
tags_label_tfidf),
data = df,
family = poisson(link = log)
)
summary(pois_views_times_2)
#save the weights
saveRDS(pois_views_times_0, "model_weights/pois_views_times_0.RDS")
saveRDS(pois_views_times_1, "model_weights/pois_views_times_1.RDS")
saveRDS(pois_views_times_2, "model_weights/pois_views_times_2.RDS")
######Normal models on popularity score
#no randomness
normal_popularity_times_0 <-
lm(
popularity ~ duration + title_length+title_sentiment_tfidf+ num_speaker + film_age,
data = df
)
summary(normal_popularity_times_0)
#only random intercept
normal_popularity_times_1 <-
lmer(
popularity ~ duration + title_length+title_sentiment_tfidf+ num_speaker + film_age + (1 |
tags_label_tfidf),
data = df
)
summary(normal_popularity_times_1)
#random intercept and slope
normal_popularity_times_2 <-
lmer(
popularity ~ duration + title_length+title_sentiment_tfidf+ num_speaker + film_age + (1 + duration + num_speaker + film_age |
tags_label_tfidf),
data = df
)
summary(normal_popularity_times_2)
#save the weights
saveRDS(normal_popularity_times_0, "model_weights/normal_popularity_times_0.RDS")
saveRDS(normal_popularity_times_1, "model_weights/normal_popularity_times_1.RDS")
saveRDS(normal_popularity_times_2, "model_weights/normal_popularity_times_2.RDS")
#response: avg views per day
#using kmeans with tfidf to determine the sentiment of the video title
pois_views_tfidf <-
glm(
avg_views_per_day ~ duration + num_speaker + film_age+title_sentiment_tfidf +title_length+ tags_label_tfidf,
family = poisson(link = log)
)
summary(pois_views_tfidf)
#Linear model
#response: composite popularity score (includes languages, standardized comments,
# standardized views,aggregate ratings, number of related talks)
normal_popularity <-
lm(popularity ~ duration + num_speaker+title_sentiment_tfidf + title_length+film_age + tags_label_tfidf)
summary(normal_popularity)
saveRDS(normal_popularity, "model_weights/normal_popularity.RDS")
saveRDS(pois_views_tfidf, "model_weights/pois_views_simple_tfidf.RDS")
source("latex_tables_makers/longtablestargazer.R")
require(stargazer)
library(reporttools)
####import weights
#simple models
normal_popularity <- readRDS("model_weights/normal_popularity.RDS")
pois_views_tfidf <-
readRDS("model_weights/pois_views_simple_tfidf.RDS")
pois_views_bow <- readRDS("model_weights/pois_views_simple_bow.RDS")
#mixed models themes
pois_views_themes_0 <-
readRDS("model_weights/pois_views_themes_0.RDS")
pois_views_themes_1 <-
readRDS("model_weights/pois_views_themes_1.RDS")
pois_views_themes_2 <-
readRDS("model_weights/pois_views_themes_2.RDS")
normal_popularity_themes_0 <-
readRDS("model_weights/normal_popularity_themes_0.RDS")
normal_popularity_themes_1 <-
readRDS("model_weights/normal_popularity_themes_1.RDS")
normal_popularity_themes_2 <-
readRDS("model_weights/normal_popularity_themes_2.RDS")
#mixed models times
pois_views_times_0 <- readRDS("model_weights/pois_views_times_0.RDS")
pois_views_times_1 <- readRDS("model_weights/pois_views_times_1.RDS")
pois_views_times_2 <- readRDS("model_weights/pois_views_times_2.RDS")
normal_popularity_times_0 <-
readRDS("model_weights/normal_popularity_times_0.RDS")
normal_popularity_times_1 <-
readRDS("model_weights/normal_popularity_times_1.RDS")
normal_popularity_times_2 <-
readRDS("model_weights/normal_popularity_times_2.RDS")
#anova tables
#these test the random slope
sink("report/tables/anova_pois_themes.tex")
print(xtable(anova(
pois_views_themes_1, pois_views_themes_2
)))
sink("report/tables/anova_pois_times.tex")
print(xtable(anova(pois_views_times_1, pois_views_times_2)))
sink("report/tables/anova_normal_popularity_themes.tex")
print(xtable(
anova(normal_popularity_themes_1, normal_popularity_themes_2)
))
sink("report/tables/anova_normal_popularity_times.tex")
print(xtable(anova(
normal_popularity_times_1, normal_popularity_times_2
)))
#AIC tables
#these test random intercept
sink("report/tables/aic_pois_themes.tex")
print(xtable(AIC(
pois_views_themes_0, pois_views_themes_1
)))
sink("report/tables/aic_pois_times.tex")
print(xtable(AIC(pois_views_times_0, pois_views_times_1)))
sink("report/tables/aic_normal_popularity_themes.tex")
print(xtable(AIC(
normal_popularity_themes_0, normal_popularity_themes_1
)))
sink("report/tables/aic_normal_popularity_times.tex")
print(xtable(AIC(
normal_popularity_times_0, normal_popularity_times_1
)))
summary(normal_popularity_times_2)
