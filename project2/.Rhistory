setwd("~/Documents/YorkU_Courses/MATH6627_Stats_Consulting/math6627_coursework/project2")
df <- read.csv("data/cleaned_data.csv")
attach(df)
#response: avg views per day
#using kmeans with tfidf to determine the sentiment of the video title
pois_views_tfidf <-
glm(
avg_views_per_day ~ duration + num_speaker + film_age+title_sentiment_tfidf +title_length+ tags_label_tfidf,
family = poisson(link = log)
)
summary(pois_views_tfidf)
#Linear model
#response: composite popularity score (includes languages, standardized comments,
# standardized views,aggregate ratings, number of related talks)
normal_popularity <-
lm(popularity ~ duration + num_speaker+title_sentiment_tfidf + title_length+film_age + tags_label_tfidf)
summary(normal_popularity)
saveRDS(normal_popularity, "model_weights/normal_popularity.RDS")
saveRDS(pois_views_tfidf, "model_weights/pois_views_simple_tfidf.RDS")
#####variation by themes
#Poisson models with kmeans tfidf on avergae views per day
#no randomness
pois_views_themes_0 <-
glm(
avg_views_per_day ~ duration + num_speaker + film_age+ title_length+title_sentiment_tfidf,
data = df,
family = poisson(link = log)
)
summary(pois_views_themes_0)
#only random intercept
pois_views_themes_1 <-
glmmTMB(
avg_views_per_day ~ duration + num_speaker + title_length+title_sentiment_tfidf+ film_age + (1 |
tags_label_tfidf),
data = df,
family = poisson(link = log)
)
library(glmmTMB)
#only random intercept
pois_views_themes_1 <-
glmmTMB(
avg_views_per_day ~ duration + num_speaker + title_length+title_sentiment_tfidf+ film_age + (1 |
tags_label_tfidf),
data = df,
family = poisson(link = log)
)
summary(pois_views_themes_1)
#random intercept and slope
pois_views_themes_2 <-
glmmTMB(
avg_views_per_day ~ duration + title_length+title_sentiment_tfidf+ num_speaker + film_age + (1 + duration + num_speaker + film_age + title_length+title_sentiment_tfidf |
tags_label_tfidf),
data = df,
family = poisson(link = log)
)
summary(pois_views_themes_2)
#save the weights
saveRDS(pois_views_themes_0, "model_weights/pois_views_themes_0.RDS")
saveRDS(pois_views_themes_1, "model_weights/pois_views_themes_1.RDS")
saveRDS(pois_views_themes_2, "model_weights/pois_views_themes_2.RDS")
######Normal models on popularity score
#no randomness
normal_popularity_themes_0 <-
lm(
popularity ~ duration + num_speaker + film_age+ title_length+title_sentiment_tfidf,
data = df
)
summary(normal_popularity_themes_0)
#only random intercept
normal_popularity_themes_1 <-
glmmTMB(
popularity ~ duration + num_speaker + title_length+title_sentiment_tfidf+ film_age + (1 |
tags_label_tfidf),
data = df
)
summary(normal_popularity_themes_1)
#random intercept and slope
normal_popularity_themes_2 <-
glmmTMB(
popularity ~ duration + num_speaker+ title_length+title_sentiment_tfidf + film_age + (1 + duration + num_speaker + film_age+ title_length+title_sentiment_tfidf |
tags_label_tfidf),
data = df
)
summary(normal_popularity_themes_2)
#save the weights
saveRDS(normal_popularity_themes_0, "model_weights/normal_popularity_themes_0.RDS")
saveRDS(normal_popularity_themes_1, "model_weights/normal_popularity_themes_1.RDS")
saveRDS(normal_popularity_themes_2, "model_weights/normal_popularity_themes_2.RDS")
#Poisson models
pois_views_times_0 <-
glm(
avg_views_per_day ~ duration + num_speaker+ title_length+title_sentiment_tfidf + film_age,
data = df,
family = poisson(link = log)
)
summary(pois_views_times_0)
#only random intercept
pois_views_times_1 <-
glmmTMB(
avg_views_per_day ~ duration + title_length+title_sentiment_tfidf+ num_speaker + film_age + (1 |
tags_label_tfidf),
data = df,
family = poisson(link = log)
)
summary(pois_views_times_1)
#random intercept and slope
pois_views_times_2 <-
glmmTMB(
avg_views_per_day ~ duration+ title_length+title_sentiment_tfidf + num_speaker + film_age + (1 + duration + num_speaker + film_age+ title_length+title_sentiment_tfidf |
tags_label_tfidf),
data = df,
family = poisson(link = log)
)
summary(pois_views_times_2)
#save the weights
saveRDS(pois_views_times_0, "model_weights/pois_views_times_0.RDS")
saveRDS(pois_views_times_1, "model_weights/pois_views_times_1.RDS")
saveRDS(pois_views_times_2, "model_weights/pois_views_times_2.RDS")
######Normal models on popularity score
#no randomness
normal_popularity_times_0 <-
lm(
popularity ~ duration + title_length+title_sentiment_tfidf+ num_speaker + film_age,
data = df
)
summary(normal_popularity_times_0)
#only random intercept
normal_popularity_times_1 <-
glmmTMB(
popularity ~ duration + title_length+title_sentiment_tfidf+ num_speaker + film_age + (1 |
tags_label_tfidf),
data = df
)
summary(normal_popularity_times_1)
#random intercept and slope
normal_popularity_times_2 <-
glmmTMB(
popularity ~ duration + title_length+title_sentiment_tfidf+ num_speaker + film_age + (1 + duration + num_speaker + film_age |
tags_label_tfidf),
data = df
)
summary(normal_popularity_times_2)
#save the weights
saveRDS(normal_popularity_times_0, "model_weights/normal_popularity_times_0.RDS")
saveRDS(normal_popularity_times_1, "model_weights/normal_popularity_times_1.RDS")
saveRDS(normal_popularity_times_2, "model_weights/normal_popularity_times_2.RDS")
source("latex_table_makers/longtablestargazer.R")
source("latex_tables_makers/longtablestargazer.R")
require(stargazer)
library(xtable)
library(memisc)
library(reporttools)
#simple models
normal_popularity<-readRDS("model_weights/normal_popularity.RDS")
pois_views_tfidf<-readRDS("model_weights/pois_views_simple_tfidf.RDS")
pois_views_bow<-readRDS("model_weights/pois_views_simple_bow.RDS")
#mixed models themes
pois_views_themes_0<-readRDS("model_weights/pois_views_themes_0.RDS")
pois_views_themes_1<-readRDS("model_weights/pois_views_themes_1.RDS")
pois_views_themes_2<-readRDS("model_weights/pois_views_themes_2.RDS")
normal_popularity_themes_0<-readRDS("model_weights/normal_popularity_themes_0.RDS")
normal_popularity_themes_1<-readRDS("model_weights/normal_popularity_themes_1.RDS")
normal_popularity_themes_2<-readRDS("model_weights/normal_popularity_themes_2.RDS")
#mixed models times
pois_views_times_0<-readRDS("model_weights/pois_views_times_0.RDS")
pois_views_times_1<-readRDS("model_weights/pois_views_times_1.RDS")
pois_views_times_2<-readRDS("model_weights/pois_views_times_2.RDS")
normal_popularity_times_0<-readRDS("model_weights/normal_popularity_times_0.RDS")
normal_popularity_times_1<-readRDS("model_weights/normal_popularity_times_1.RDS")
normal_popularity_times_2<-readRDS("model_weights/normal_popularity_times_2.RDS")
#sumarize numeric variables
sink("report/tables/continous_variables_description.tex")
print(tableContinuous(df[,sapply(df, is.numeric)]))
sink()  # returns output to the console
#sumarize categorical variables
sink("report/tables/categorical_variables_description.tex")
print(tableNominal(df[,!sapply(df, is.numeric)])) #adds the table to the text file
df<-read.csv("data/cleaned_data.csv")
View(df)
df<-read.csv("data/cleaned_data.csv")
View(df)
#we only want untransformed variables ie those not normalized
df_categorical<-df[,c("title_sentiment_tfidf", "tags_label_tfidf")]
df_continious<-df[,c("avg_views_per_day","duration_no_norm","num_speaker_no_norm","film_age_no_norm","title_length_no_norm", "popularity")]
df_numeric<-df[,c("avg_views_per_day","duration_no_norm","num_speaker_no_norm","film_age_no_norm","title_length_no_norm", "popularity")]
#we only want untransformed variables ie those not normalized
df_categorical<-df[,c("title_sentiment_tfidf", "tags_label_tfidf")]
df_numeric<-df[,c("avg_views_per_day","duration_no_norm","num_speaker_no_norm","film_age_no_norm","title_length_no_norm", "popularity")]
#sumarize numeric variables
sink("report/tables/numeric_variables_description.tex")
print(tableContinuous(df_numeric))
#sumarize categorical variables
sink("report/tables/categorical_variables_description.tex")
print(tableNominal(df_categorical)) #adds the table to the text file
#anova tables
#these test the random slope
sink("report/tables/anova_pois_themes.tex")
print(xtable(anova(pois_views_themes_1,pois_views_themes_2)))
sink("report/tables/anova_pois_times.tex")
print(xtable(anova(pois_views_times_1,pois_views_times_2)))
sink("report/tables/anova_normal_popularity_themes.tex")
print(xtable(anova(normal_popularity_themes_1,normal_popularity_themes_2)))
sink("report/tables/anova_normal_popularity_times.tex")
print(xtable(anova(normal_popularity_times_1,normal_popularity_times_2)))
anova(pois_views_themes_1,pois_views_themes_2)
